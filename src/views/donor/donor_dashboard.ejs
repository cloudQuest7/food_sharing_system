<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>ShareBites - Donor Dashboard</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <link rel="preconnect" href="https://fonts.gstatic.com/" crossorigin="" />
    <link rel="stylesheet" href="https://fonts.googleapis.com/css2?display=swap&family=Epilogue:wght@400;500;700;900&family=Noto+Sans:wght@400;500;700;900" />
    <style>
        body {
            font-family: Epilogue, "Noto Sans", sans-serif;
            background-color: #fcfaf8;
        }
    </style>
</head>
<body>
    <div class="flex">
        <!-- Sidebar -->
        <div class="w-64 h-screen bg-white border-r border-[#e8dbce] fixed flex flex-col justify-between">
            <div class="p-6">
                <div class="flex items-center gap-4 text-[#1c140d] mb-8">
                    <div class="size-4">
                        <svg viewBox="0 0 48 48" fill="none" xmlns="http://www.w3.org/2000/svg">
                            <path d="M8.57829 8.57829C5.52816 11.6284 3.451 15.5145 2.60947 19.7452C1.76794 23.9758 2.19984 28.361 3.85056 32.3462C5.50128 36.3314 8.29667 39.7376 11.8832 42.134C15.4698 44.5305 19.6865 45.8096 24 45.8096C28.3135 45.8096 32.5302 44.5305 36.1168 42.134C39.7033 39.7375 42.4987 36.3314 44.1494 32.3462C45.8002 28.361 46.2321 23.9758 45.3905 19.7452C44.549 15.5145 42.4718 11.6284 39.4217 8.57829L24 24L8.57829 8.57829Z" fill="currentColor"></path>
                        </svg>
                    </div>
                    <h2 class="text-[#1c140d] text-lg font-bold leading-tight tracking-[-0.015em]">ShareBites</h2>
                </div>
                <nav class="space-y-4">
                    <a href="/donor/dashboard" class="block px-4 py-2 bg-[#f2800d] text-white rounded-lg font-medium">Dashboard</a>
                    <a href="/donor/post-food" class="block px-4 py-2 text-[#1c140d] hover:bg-[#fcfaf8] rounded-lg font-medium">Post Food</a>
                    <a href="/donor/donation" class="block px-4 py-2 text-[#1c140d] hover:bg-[#fcfaf8] rounded-lg font-medium">My Donations</a>
                    <a href="/donor/requests" class="block px-4 py-2 text-[#1c140d] hover:bg-[#fcfaf8] rounded-lg font-medium">Requests</a>
                    <a href="/donor/profile" class="block px-4 py-2 text-[#1c140d] hover:bg-[#fcfaf8] rounded-lg font-medium">Profile</a>
                </nav>
            </div>
            
            <!-- Profile Section -->
            <div class="p-6 border-t border-[#e8dbce]">
                <div class="flex items-center gap-3">
                    <img src="https://ui-avatars.com/api/?name=<%= user.name %>&background=f2800d&color=fff" 
                         alt="<%= user.name %>'s profile" 
                         class="w-10 h-10 rounded-full border-2 border-[#f2800d]"/>
                    <div>
                        <p class="text-[#1c140d] font-bold"><%= user.name %></p>
                        <p class="text-[#9c7349] text-sm">Food Donor</p>
                    </div>
                </div>
                
                <!-- Logout Button -->
                <a href="/logout" class="flex items-center gap-2 mt-4 px-4 py-2 text-[#9c7349] hover:bg-[#fcfaf8] rounded-lg font-medium">
                    <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17 16l4-4m0 0l-4-4m4 4H7m6 4v1a3 3 0 01-3 3H6a3 3 0 01-3-3V7a3 3 0 013-3h4a3 3 0 013 3v1" />
                    </svg>
                    Logout
                </a>
            </div>
        </div>

        <!-- Main Content -->
        <div class="ml-64 flex-1 p-8">
            <!-- Welcome Section -->
            <div class="mb-8">
                <div class="flex items-center gap-3 mb-2">
                    <h1 class="text-[#1c140d] text-4xl font-black leading-tight tracking-[-0.033em]">Welcome back, <%= user.name %>! ‚ú®</h1>
                    <span class="bg-[#f2800d] text-white px-3 py-1 rounded-full text-sm font-bold" id="donor-badge">ü•á Top Sharer</span>
                </div>
                <p class="text-[#9c7349] text-lg font-normal leading-normal mt-2" id="meals-shared-text">Loading your impact...</p>
            </div>

            <!-- Impact Stats Section -->
            <div class="grid grid-cols-1 md:grid-cols-3 gap-6 mb-8">
                <div class="bg-white p-6 rounded-xl border border-[#e8dbce] hover:border-[#f2800d] transition-colors">
                    <div class="flex items-center gap-2 mb-2">
                        <span class="text-2xl">üçé</span>
                        <h2 class="text-[#1c140d] text-lg font-bold">Total Shared</h2>
                    </div>
                    <p class="text-[#f2800d] text-3xl font-black mb-2" id="total-meals">0 meals</p>
                    <div class="w-full bg-[#fcfaf8] rounded-full h-2">
                        <div class="bg-[#f2800d] h-2 rounded-full" id="meals-progress" style="width: 0%"></div>
                    </div>
                    <p class="text-[#9c7349] text-sm mt-2" id="meals-goal">Start sharing to reach your goal! üéâ</p>
                </div>
                <div class="bg-white p-6 rounded-xl border border-[#e8dbce] hover:border-[#f2800d] transition-colors">
                    <div class="flex items-center gap-2 mb-2">
                        <span class="text-2xl">üì¶</span>
                        <h2 class="text-[#1c140d] text-lg font-bold">Active Listings</h2>
                    </div>
                    <p class="text-[#f2800d] text-3xl font-black" id="active-listings">0</p>
                </div>
                <div class="bg-white p-6 rounded-xl border border-[#e8dbce] hover:border-[#f2800d] transition-colors">
                    <div class="flex items-center gap-2 mb-2">
                        <span class="text-2xl">‚ù§Ô∏è</span>
                        <h2 class="text-[#1c140d] text-lg font-bold">People Helped</h2>
                    </div>
                    <p class="text-[#f2800d] text-3xl font-black" id="people-helped">0</p>
                </div>
            </div>

            <!-- Thank You Note -->
            <div class="mb-8 bg-[#fff8f3] border border-[#f2800d] p-6 rounded-xl">
                <div class="flex items-start gap-4">
                    <span class="text-4xl">üíå</span>
                    <div>
                        <h3 class="text-[#1c140d] font-bold mb-2">Latest Community Impact</h3>
                        <p class="text-[#9c7349]">"Sarah, your vegetable donation helped us serve 20 healthy meals at the local shelter yesterday. Thank you for making a difference!"</p>
                        <p class="text-[#9c7349] font-bold mt-2">- Food Bank Organization</p>
                    </div>
                </div>
            </div>

            <!-- Quick Actions -->
            <div class="flex gap-4 mb-8">
                <a href="/donor/post-food" class="bg-[#f2800d] text-white px-6 py-3 rounded-full font-bold hover:bg-[#e67600] transition-colors flex items-center gap-2">
                    <span>‚ûï</span> Post New Food
                </a>
                <button class="border border-[#e8dbce] text-[#1c140d] px-6 py-3 rounded-full font-bold hover:border-[#f2800d] transition-colors flex items-center gap-2">
                    <span>üì¶</span> View Active Listings
                </button>
                <button class="border border-[#e8dbce] text-[#1c140d] px-6 py-3 rounded-full font-bold hover:border-[#f2800d] transition-colors flex items-center gap-2">
                    <span>üìä</span> See Impact Report
                </button>
            </div>

            <!-- Recent Activity Table -->
            <div class="bg-white p-6 rounded-xl border border-[#e8dbce] mb-8">
                <h2 class="text-[#1c140d] text-xl font-bold mb-4">Recent Food Shared</h2>
                <table class="w-full">
                    <thead>
                        <tr class="border-b border-[#e8dbce]">
                            <th class="text-left py-3 text-[#9c7349] font-medium">Food Item</th>
                            <th class="text-left py-3 text-[#9c7349] font-medium">Quantity</th>
                            <th class="text-left py-3 text-[#9c7349] font-medium">Status</th>
                            <th class="text-left py-3 text-[#9c7349] font-medium">Action</th>
                        </tr>
                    </thead>
                    <tbody id="recent-donations">
                        <tr class="border-b border-[#e8dbce]">
                            <td colspan="4" class="py-3 text-center text-[#9c7349]">Loading your recent donations...</td>
                        </tr>
                    </tbody>
                </table>
            </div>

            <!-- Incoming Requests -->
            <div class="bg-white p-6 rounded-xl border border-[#e8dbce]">
                <h2 class="text-[#1c140d] text-xl font-bold mb-4">Incoming Requests</h2>
                <div class="space-y-4">
                    <div class="p-4 border border-[#e8dbce] rounded-lg hover:border-[#f2800d] transition-colors">
                        <div class="flex justify-between items-center">
                            <div>
                                <h3 class="font-bold text-[#1c140d]">Food Bank Organization</h3>
                                <p class="text-[#9c7349]">Requesting: Fresh Vegetables</p>
                            </div>
                            <button class="px-4 py-2 bg-[#f2800d] text-[#1c140d] rounded-full font-bold hover:bg-[#e67600] transition-colors">
                                Review
                            </button>
                        </div>
                    </div>
                    <div class="p-4 border border-[#e8dbce] rounded-lg hover:border-[#f2800d] transition-colors">
                        <div class="flex justify-between items-center">
                            <div>
                                <h3 class="font-bold text-[#1c140d]">Local Shelter</h3>
                                <p class="text-[#9c7349]">Requesting: Bread Loaves</p>
                            </div>
                            <button class="px-4 py-2 bg-[#f2800d] text-[#1c140d] rounded-full font-bold hover:bg-[#e67600] transition-colors">
                                Review
                            </button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <!-- Post Food Modal -->
<div id="postFoodModal" class="hidden fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center">
    <div class="bg-white rounded-xl p-8 max-w-md w-full mx-4">
        <div class="flex justify-between items-center mb-6">
            <h2 class="text-[#1c140d] text-2xl font-bold">Post New Food</h2>
            <button onclick="closeModal()" class="text-[#9c7349] hover:text-[#1c140d]">‚úï</button>
        </div>
        
        <form class="space-y-6">
            <div>
                <label class="block text-[#1c140d] font-medium mb-2">Food Item Name</label>
                <input type="text" class="w-full px-4 py-3 rounded-xl border border-[#e8dbce] focus:border-[#f2800d] outline-none" 
                       placeholder="e.g., Fresh Vegetables"/>
            </div>
            
            <div>
                <label class="block text-[#1c140d] font-medium mb-2">Quantity</label>
                <div class="flex gap-4">
                    <input type="number" class="w-2/3 px-4 py-3 rounded-xl border border-[#e8dbce] focus:border-[#f2800d] outline-none" 
                           placeholder="Amount"/>
                    <select class="w-1/3 px-4 py-3 rounded-xl border border-[#e8dbce] focus:border-[#f2800d] outline-none">
                        <option>kg</option>
                        <option>units</option>
                        <option>liters</option>
                    </select>
                </div>
            </div>
            
            <div>
                <label class="block text-[#1c140d] font-medium mb-2">Description</label>
                <textarea class="w-full px-4 py-3 rounded-xl border border-[#e8dbce] focus:border-[#f2800d] outline-none" 
                          placeholder="Add details about the food..."></textarea>
            </div>
            
            <button type="submit" class="w-full py-3 bg-[#f2800d] text-white rounded-xl font-bold hover:bg-[#e67600] transition-colors">
                Post Food
            </button>
        </form>
    </div>
</div>

<script>
    // Function to initialize the user storage key
    function initUserStorage() {
        const userId = '<%= user.id %>';
        return `userDonations_${userId}`;
    }

    // Load all donations from localStorage
    function loadUserDonations() {
        const userStorageKey = initUserStorage();
        const universalStorageKey = 'allFoodDonations';
        
        // Try to get user-specific donations
        let userDonations = [];
        try {
            const savedDonations = localStorage.getItem(userStorageKey);
            if (savedDonations) {
                userDonations = JSON.parse(savedDonations) || [];
            }
        } catch (error) {
            console.error('Error loading user donations:', error);
        }

        // Get shared storage donations that might be from this user
        let sharedDonations = [];
        try {
            const allDonations = localStorage.getItem(universalStorageKey);
            if (allDonations) {
                const parsedDonations = JSON.parse(allDonations) || [];
                // Filter to get only this user's donations
                sharedDonations = parsedDonations.filter(donation => 
                    donation.donorId === '<%= user.id %>' || 
                    donation.donorName === '<%= user.name %>'
                );
            }
        } catch (error) {
            console.error('Error loading shared donations:', error);
        }

        // Combine both sources, prioritizing newer entries
        const allDonations = [...userDonations, ...sharedDonations];
        
        // Deduplicate by ID if needed
        const uniqueDonations = allDonations.reduce((acc, current) => {
            const x = acc.find(item => item.id === current.id);
            if (!x) {
                return acc.concat([current]);
            } else {
                return acc;
            }
        }, []);

        return uniqueDonations;
    }

    // Update dashboard with donor statistics
    function updateDashboardStats() {
        const donations = loadUserDonations();
        console.log('Loaded donations:', donations);
        
        // Calculate metrics
        const totalDonations = donations.length;
        const activeDonations = donations.filter(d => d.status === 'pending').length;
        
        // Estimate people helped (2.5 people per donation on average)
        const peopleHelped = Math.round(totalDonations * 2.5);
        
        // Update the UI
        document.getElementById('total-meals').textContent = `${totalDonations} meals`;
        document.getElementById('active-listings').textContent = activeDonations;
        document.getElementById('people-helped').textContent = peopleHelped;
        
        // Update progress bar (goal is 50 donations)
        const goalAmount = 50;
        const progressPercent = Math.min(Math.round((totalDonations / goalAmount) * 100), 100);
        document.getElementById('meals-progress').style.width = `${progressPercent}%`;
        
        // Update goal text
        if (totalDonations >= goalAmount) {
            document.getElementById('meals-goal').textContent = `Congratulations! You've reached your goal of ${goalAmount} meals! üéâ`;
        } else {
            const remaining = goalAmount - totalDonations;
            document.getElementById('meals-goal').textContent = `${remaining} more to reach ${goalAmount}! üéâ`;
        }
        
        // Update donor badge
        if (totalDonations >= 100) {
            document.getElementById('donor-badge').textContent = 'ü•á Master Sharer';
        } else if (totalDonations >= 50) {
            document.getElementById('donor-badge').textContent = 'ü•à Super Sharer';
        } else if (totalDonations >= 20) {
            document.getElementById('donor-badge').textContent = 'ü•â Frequent Sharer';
        } else {
            document.getElementById('donor-badge').textContent = 'üëã New Sharer';
        }
        
        // Update the welcome message
        document.getElementById('meals-shared-text').textContent = 
            `You've shared ${totalDonations} meals${totalDonations > 0 ? '‚Äîkeep changing lives!' : '. Start sharing today!'}`;
    }
    
    // Populate the recent donations table
    function populateRecentDonations() {
        const donations = loadUserDonations();
        const recentDonationsElement = document.getElementById('recent-donations');
        
        // Clear the table first
        recentDonationsElement.innerHTML = '';
        
        if (donations.length === 0) {
            recentDonationsElement.innerHTML = `
                <tr class="border-b border-[#e8dbce]">
                    <td colspan="4" class="py-6 text-center">
                        <div class="flex flex-col items-center">
                            <span class="text-4xl mb-2">üçΩÔ∏è</span>
                            <p class="text-[#9c7349] font-medium">No donations yet</p>
                            <p class="text-[#9c7349] text-sm">Start sharing food with those in need!</p>
                            <a href="/donor/post-food" class="mt-4 px-4 py-2 bg-[#f2800d] text-white rounded-lg hover:bg-[#e67600] transition-colors">
                                Post Your First Donation
                            </a>
                        </div>
                    </td>
                </tr>
            `;
            return;
        }
        
        // Sort by date, newest first
        const sortedDonations = [...donations].sort((a, b) => {
            return new Date(b.createdAt || b.date || 0) - new Date(a.createdAt || a.date || 0);
        });
        
        // Display only the 5 most recent donations
        const recentDonations = sortedDonations.slice(0, 5);
        
        recentDonations.forEach(donation => {
            const row = document.createElement('tr');
            row.className = 'border-b border-[#e8dbce]';
            
            const statusEmoji = {
                'pending': '‚è≥',
                'accepted': '‚úÖ',
                'completed': 'üéâ',
                'cancelled': '‚ùå'
            };
            
            const statusLabel = {
                'pending': 'Pending',
                'accepted': 'Accepted',
                'completed': 'Completed',
                'cancelled': 'Cancelled'
            };
            
            const statusClass = {
                'pending': 'text-yellow-600',
                'accepted': 'text-blue-600',
                'completed': 'text-green-600',
                'cancelled': 'text-red-600'
            };
            
            row.innerHTML = `
                <td class="py-3">${donation.foodType || donation.name || 'Food Item'}</td>
                <td class="py-3">${donation.quantity || '1'} ${donation.unit || 'kg'}</td>
                <td class="py-3">
                    <span class="flex items-center gap-1 ${statusClass[donation.status] || ''}">
                        <span>${statusEmoji[donation.status] || '‚è≥'}</span> 
                        ${statusLabel[donation.status] || 'Pending'}
                    </span>
                </td>
                <td class="py-3">
                    ${donation.status === 'pending' ? `
                        <button class="text-red-500 hover:text-red-700 transition-colors flex items-center gap-1"
                                onclick="cancelDonation('${donation.id}')">
                            <span>üóëÔ∏è</span> Cancel
                        </button>
                    ` : ''}
                </td>
            `;
            
            recentDonationsElement.appendChild(row);
        });
    }
    
    // Function to cancel a donation
    function cancelDonation(donationId) {
        if (confirm('Are you sure you want to cancel this donation?')) {
            const userStorageKey = initUserStorage();
            const universalStorageKey = 'allFoodDonations';
            
            // Update in user storage
            try {
                const savedDonations = localStorage.getItem(userStorageKey);
                if (savedDonations) {
                    let donations = JSON.parse(savedDonations);
                    const donationIndex = donations.findIndex(d => d.id === donationId);
                    
                    if (donationIndex !== -1) {
                        donations[donationIndex].status = 'cancelled';
                        localStorage.setItem(userStorageKey, JSON.stringify(donations));
                    }
                }
            } catch (error) {
                console.error('Error updating user donation:', error);
            }
            
            // Update in universal storage
            try {
                const allDonations = localStorage.getItem(universalStorageKey);
                if (allDonations) {
                    let donations = JSON.parse(allDonations);
                    const donationIndex = donations.findIndex(d => d.id === donationId);
                    
                    if (donationIndex !== -1) {
                        donations[donationIndex].status = 'cancelled';
                        localStorage.setItem(universalStorageKey, JSON.stringify(donations));
                    }
                }
            } catch (error) {
                console.error('Error updating shared donation:', error);
            }
            
            // Refresh the dashboard
            updateDashboardStats();
            populateRecentDonations();
        }
    }
    
    // Initialize dashboard on load
    document.addEventListener('DOMContentLoaded', function() {
        console.log('Loading dashboard data...');
        updateDashboardStats();
        populateRecentDonations();
    });
    
    function closeModal() {
        document.getElementById('postFoodModal').classList.add('hidden');
    }
    
    function openPostFoodModal() {
        document.getElementById('postFoodModal').classList.remove('hidden');
    }
</script>
</body>
</html>