<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>ShareBites - Post Food</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <link rel="preconnect" href="https://fonts.gstatic.com/" crossorigin />
    <link href="https://fonts.googleapis.com/css2?family=Epilogue:wght@400;500;700;900&family=Noto+Sans:wght@400;500;700;900&display=swap" rel="stylesheet" />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css">
    <style>
        body {
            font-family: Epilogue, "Noto Sans", sans-serif;
        }
        .form-card {
            background: linear-gradient(to bottom right, #ffffff, #fcfaf8);
            box-shadow: 0 4px 24px -8px rgba(242, 128, 13, 0.1);
        }
        
        .input-icon {
            color: #9c7349;
            opacity: 0.5;
            transition: opacity 0.2s;
        }
        
        .form-input:focus + .input-icon {
            opacity: 1;
            color: #f2800d;
        }
        
        .image-upload-area {
            background: linear-gradient(45deg, #fcfaf8 0%, #ffffff 100%);
        }
        
        @keyframes fadeIn {
            from { opacity: 0; transform: translateY(-10px); }
            to { opacity: 1; transform: translateY(0); }
        }
        
        .animate-fadeIn {
            animation: fadeIn 0.3s ease-out;
        }
    </style>
</head>
<body class="flex bg-[#fcfaf8]">
    <!-- Mobile Menu Toggle -->
    <button id="menuToggle" class="lg:hidden fixed top-4 left-4 z-50 p-2 bg-white rounded-xl border border-[#e8dbce] text-[#9c7349] hover:text-[#f2800d]">
        <i class="fas fa-bars"></i>
    </button>

    <!-- Sidebar -->
    <aside id="sidebar" class="w-64 h-screen bg-white border-r border-[#e8dbce] fixed left-0 top-0 flex flex-col transform -translate-x-full lg:translate-x-0 transition-transform duration-300 z-40">
        <!-- Logo Section -->
        <div class="flex items-center gap-4 p-6 border-b border-[#e8dbce]">
            <div class="size-6">
                <svg viewBox="0 0 48 48" fill="none" xmlns="http://www.w3.org/2000/svg">
                    <path d="M8.57829 8.57829C5.52816 11.6284 3.451 15.5145 2.60947 19.7452C1.76794 23.9758 2.19984 28.361 3.85056 32.3462C5.50128 36.3314 8.29667 39.7376 11.8832 42.134C15.4698 44.5305 19.6865 45.8096 24 45.8096C28.3135 45.8096 32.5302 44.5305 36.1168 42.134C39.7033 39.7375 42.4987 36.3314 44.1494 32.3462C45.8002 28.361 46.2321 23.9758 45.3905 19.7452C44.549 15.5145 42.4718 11.6284 39.4217 8.57829L24 24L8.57829 8.57829Z" fill="#f2800d"/>
                </svg>
            </div>
            <h2 class="text-[#1c140d] text-xl font-bold">WeShareIt</h2>
        </div>

        <!-- Navigation -->
        <nav class="p-4 flex-1">
            <ul class="space-y-2">
                <li>
                    <a href="/donor/dashboard" class="flex items-center p-3 text-[#9c7349] hover:bg-[#fcfaf8] rounded-xl transition-colors">
                        <i class="fas fa-home w-6"></i>
                        <span class="ml-3">Home</span>
                    </a>
                </li>
                <li>
                    <a href="/donor/post-food" class="flex items-center p-3 bg-[#fff8f3] text-[#f2800d] rounded-xl">
                        <i class="fas fa-plus-circle w-6"></i>
                        <span class="ml-3">Post Food</span>
                    </a>
                </li>
                <li>
                    <a href="/donor/donation" class="flex items-center p-3 text-[#9c7349] hover:bg-[#fcfaf8] rounded-xl transition-colors">
                        <i class="fas fa-box-open w-6"></i>
                        <span class="ml-3">My Donations</span>
                    </a>
                </li>
                <li>
                    <a href="/donor/requests" class="flex items-center p-3 text-[#9c7349] hover:bg-[#fcfaf8] rounded-xl transition-colors">
                        <i class="fas fa-bell w-6"></i>
                        <span class="ml-3">View Requests</span>
                        <span id="sidebarRequestCount" class="hidden ml-auto bg-[#f2800d] text-white text-xs font-bold w-5 h-5 rounded-full flex items-center justify-center opacity-0 transition-all duration-300"></span>
                    </a>
                </li>
                <li>
                    <a href="/donor/profile" class="flex items-center p-3 text-[#9c7349] hover:bg-[#fcfaf8] rounded-xl transition-colors">
                        <i class="fas fa-user w-6"></i>
                        <span class="ml-3">Profile</span>
                    </a>
                </li>
            </ul>
        </nav>

        <!-- Profile Section -->
        <div class="p-4 border-t border-[#e8dbce]">
            <div class="flex items-center space-x-3 p-3 text-[#9c7349] hover:bg-[#fcfaf8] rounded-xl transition-colors cursor-pointer">
                <img src="https://ui-avatars.com/api/?name=<%= user.name %>&background=f2800d&color=fff" alt="Profile" class="w-8 h-8 rounded-full border-2 border-[#f2800d]">
                <div>
                    <p class="text-sm font-bold text-[#1c140d]"><%= user.name %></p>
                    <p class="text-xs text-[#9c7349]">Food Donor</p>
                </div>
                <i class="fas fa-chevron-right ml-auto text-xs"></i>
            </div>
        </div>
    </aside>

    <!-- Main Content -->
    <main class="w-full lg:ml-64 p-4 lg:p-8 transition-all duration-300">
        <!-- Header Section -->
        <div class="text-center max-w-2xl mx-auto mb-8">
            <h1 class="text-2xl lg:text-3xl font-semibold text-[#1c140d] tracking-wide leading-tight mb-2">
                Hello <%= user.name %>, Post Food
            </h1>
            <p class="text-sm lg:text-base text-[#9c7349] font-normal">
                Share your excess food with those in need
            </p>
        </div>

        <!-- Post Food Form -->
        <div class="max-w-xl mx-auto">
            <form id="postFoodForm" class="form-card p-6 lg:p-8 rounded-2xl border border-[#e8dbce] space-y-6">
                <!-- Food Name -->
                <div class="space-y-2">
                    <label class="block text-sm font-medium text-[#9c7349]" for="foodName">
                        Food Name *
                    </label>
                    <div class="relative">
                        <input type="text" id="foodName" name="foodName" required
                               class="form-input w-full pl-12 p-3.5 border border-[#e8dbce] rounded-xl bg-[#fcfaf8] focus:border-[#f2800d] outline-none transition-all duration-300 hover:border-[#f2800d]/50"
                               placeholder="What food items are you sharing?">
                        <i class="fas fa-utensils input-icon absolute left-4 top-1/2 -translate-y-1/2"></i>
                    </div>
                </div>

                <!-- Quantity and Expiry Date Grid -->
                <div class="grid grid-cols-1 sm:grid-cols-2 gap-6">
                    <div class="space-y-2">
                        <label class="block text-sm font-medium text-[#9c7349]" for="quantity">
                            Quantity *
                        </label>
                        <div class="relative">
                            <input type="number" id="quantity" name="quantity" required min="1"
                                   class="form-input w-full pl-12 p-3.5 border border-[#e8dbce] rounded-xl bg-[#fcfaf8] focus:border-[#f2800d] outline-none transition-all duration-300 hover:border-[#f2800d]/50"
                                   placeholder="How many portions?">
                            <i class="fas fa-weight input-icon absolute left-4 top-1/2 -translate-y-1/2"></i>
                        </div>
                    </div>
                    <div class="space-y-2">
                        <label class="block text-sm font-medium text-[#9c7349]" for="expiryDate">
                            Expiry Date *
                        </label>
                        <div class="relative">
                            <input type="date" id="expiryDate" name="expiryDate" required
                                   class="form-input w-full pl-12 p-3.5 border border-[#e8dbce] rounded-xl bg-[#fcfaf8] focus:border-[#f2800d] outline-none transition-all duration-300 hover:border-[#f2800d]/50">
                            <i class="fas fa-calendar input-icon absolute left-4 top-1/2 -translate-y-1/2"></i>
                        </div>
                    </div>
                </div>

                <!-- Location -->
                <div class="space-y-2">
                    <label class="block text-sm font-medium text-[#9c7349]" for="location">
                        Pickup Location *
                    </label>
                    <div class="relative">
                        <input type="text" id="location" name="location" required
                               class="form-input w-full pl-12 pr-12 p-3.5 border border-[#e8dbce] rounded-xl bg-[#fcfaf8] focus:border-[#f2800d] outline-none transition-all duration-300 hover:border-[#f2800d]/50"
                               placeholder="Where can the food be collected?"
                               value="<%= user.location || '' %>">
                        <i class="fas fa-map-marker-alt input-icon absolute left-4 top-1/2 -translate-y-1/2"></i>
                        <button type="button" onclick="detectLocation()" 
                                class="absolute right-3 top-1/2 -translate-y-1/2 p-2 text-[#9c7349] hover:text-[#f2800d] transition-colors">
                            <i class="fas fa-location-arrow"></i>
                        </button>
                    </div>
                </div>

                <!-- Image Upload -->
                <div class="space-y-2">
                    <label class="block text-sm font-medium text-[#9c7349]">
                        Food Image (Optional)
                    </label>
                    <div class="flex items-center justify-center w-full">
                        <label class="image-upload-area flex flex-col w-full h-32 border-2 border-dashed border-[#e8dbce] rounded-xl cursor-pointer hover:border-[#f2800d] hover:bg-[#fff8f3] transition-all duration-300">
                            <div id="imagePreviewContainer" class="relative hidden w-full h-full animate-fadeIn">
                                <img id="imagePreview" class="w-full h-full object-cover rounded-xl">
                                <button type="button" onclick="removeImage()" 
                                        class="absolute -top-2 -right-2 bg-white w-8 h-8 rounded-full shadow-lg hover:bg-red-50 transition-colors flex items-center justify-center">
                                    <i class="fas fa-times text-red-500"></i>
                                </button>
                            </div>
                            <div id="uploadPrompt" class="flex flex-col items-center justify-center h-full space-y-2">
                                <div class="p-3 rounded-full bg-[#fff8f3]">
                                    <i class="fas fa-cloud-upload-alt text-xl text-[#f2800d]"></i>
                                </div>
                                <p class="text-sm text-center text-[#9c7349]">
                                    <span class="font-medium">Click to upload</span> or drag and drop
                                </p>
                            </div>
                            <input type="file" id="foodImage" name="foodImage" accept="image/*" class="hidden" onchange="handleImageUpload(event)">
                        </label>
                    </div>
                </div>

                <!-- Submit Button -->
                <div class="pt-4">
                    <button type="submit" id="submitBtn"
                            class="w-full p-4 bg-gradient-to-r from-[#f2800d] to-[#ff9838] text-white rounded-xl font-bold hover:from-[#e67600] hover:to-[#f2800d] transition-all duration-300 transform hover:scale-[0.99] active:scale-[0.97] shadow-lg">
                        Post Food
                    </button>
                </div>
            </form>
        </div>
    </main>

    <!-- Success Modal -->
    <div id="successModal" class="hidden fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50">
        <div class="bg-white rounded-xl p-6 max-w-md w-full mx-4 shadow-xl animate-fadeIn">
            <div class="text-center mb-6">
                <div class="inline-flex items-center justify-center w-16 h-16 rounded-full bg-green-100 text-green-500 mb-4">
                    <i class="fas fa-check text-3xl"></i>
                </div>
                <h3 class="text-xl font-bold text-[#1c140d] mb-2">Food Posted Successfully!</h3>
                <p class="text-[#9c7349]">Your food donation has been posted and added to your donations list.</p>
            </div>
            <div class="flex flex-col sm:flex-row gap-4">
                <button onclick="closeSuccessModal()" class="flex-1 py-3 bg-[#f2800d] text-white rounded-xl font-bold hover:bg-[#e67600] transition-colors">
                    View My Donations
                </button>
                <button onclick="postAnother()" class="flex-1 py-3 border border-[#e8dbce] text-[#1c140d] rounded-xl font-bold hover:border-[#f2800d] transition-colors">
                    Post Another
                </button>
            </div>
        </div>
    </div>

    <script>
        // Show the modal on successful form submission
        document.getElementById('postFoodForm').addEventListener('submit', function(e) {
            e.preventDefault();
            
            // Validate form
            const foodName = document.getElementById('foodName').value.trim();
            const quantity = document.getElementById('quantity').value;
            const expiryDate = document.getElementById('expiryDate').value;
            const location = document.getElementById('location').value.trim();
            
            if (!foodName || !quantity || !expiryDate || !location) {
                alert('Please fill in all required fields');
                return;
            }
            
            // Get form data to send to server and store in donations
            const formData = {
                foodName: foodName,
                quantity: quantity,
                expiryDate: expiryDate,
                location: location,
                userId: '<%= user._id %>',
                userName: '<%= user.name %>',
                status: 'pending',
                timestamp: new Date().toISOString()
            };
            
            // Save to local storage for demo purposes
            // In a real implementation, this would be an API call to save in the database
            saveToLocalDonations(formData);
            
            // In a real implementation, you would use this:
            /*
            fetch('/donor/submit-donation', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify(formData)
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    // Show success modal
                    document.getElementById('successModal').classList.remove('hidden');
                } else {
                    alert('Error: ' + data.message);
                }
            })
            .catch(error => {
                console.error('Error submitting donation:', error);
                alert('Failed to submit donation. Please try again.');
            });
            */
            
            // Show success modal
            document.getElementById('successModal').classList.remove('hidden');
        });
        
        function saveToLocalDonations(formData) {
            // Generate a unique ID for the donation
            const donationId = 'donation_' + Date.now();
            
            // Create the donation object with all required fields
            const newDonation = {
                id: donationId,
                status: 'pending', // Ensure status field is set
                timestamp: new Date().toISOString(), // Ensure timestamp is in ISO format
                ...formData
            };
            
            // Initialize user storage key if not already set
            if (!userStorageKey) {
                initializeUserStorage();
            }
            
            // Save to user-specific storage
            let userDonations = JSON.parse(localStorage.getItem(userStorageKey) || '[]');
            userDonations.push(newDonation);
            localStorage.setItem(userStorageKey, JSON.stringify(userDonations));
            
            // Also save to universal storage for recipients to find
            let allDonations = JSON.parse(localStorage.getItem('allFoodDonations') || '[]');
            allDonations.push(newDonation);
            localStorage.setItem('allFoodDonations', JSON.stringify(allDonations));
            
            console.log('Saved donation to localStorage:', newDonation);
            console.log('User-specific storage key:', userStorageKey);
            console.log('Universal storage key: allFoodDonations');
            console.log('All donations in user storage:', userDonations);
            console.log('All donations in universal storage:', allDonations);
        }
        
        function closeSuccessModal() {
            document.getElementById('successModal').classList.add('hidden');
            window.location.href = '/donor/donation';
        }
        
        function postAnother() {
            document.getElementById('successModal').classList.add('hidden');
            document.getElementById('postFoodForm').reset();
        }
        
        function detectLocation() {
            if (navigator.geolocation) {
                const locationInput = document.getElementById('location');
                locationInput.disabled = true;
                locationInput.placeholder = 'Detecting your location...';
                
                navigator.geolocation.getCurrentPosition(
                    function(position) {
                        // In a real app, you would use a geocoding service to get the address
                        // For this demo, we'll just use coordinates
                        locationInput.value = `Lat: ${position.coords.latitude.toFixed(4)}, Long: ${position.coords.longitude.toFixed(4)}`;
                        locationInput.disabled = isEditMode ? false : true;
                    },
                    function(error) {
                        alert('Error detecting location: ' + error.message);
                        locationInput.disabled = false;
                        locationInput.placeholder = 'Where can the food be collected?';
                    }
                );
            } else {
                alert('Geolocation is not supported by this browser');
            }
        }
        
        function handleImageUpload(event) {
            const file = event.target.files[0];
            if (!file) return;
            
            if (!file.type.match('image.*')) {
                alert('Please select an image file');
                return;
            }
            
            const reader = new FileReader();
            reader.onload = function(e) {
                const imagePreview = document.getElementById('imagePreview');
                imagePreview.src = e.target.result;
                
                document.getElementById('imagePreviewContainer').classList.remove('hidden');
                document.getElementById('uploadPrompt').classList.add('hidden');
            }
            
            reader.readAsDataURL(file);
        }
        
        function removeImage() {
            document.getElementById('foodImage').value = '';
            document.getElementById('imagePreviewContainer').classList.add('hidden');
            document.getElementById('uploadPrompt').classList.remove('hidden');
        }

        // Initialize
        document.addEventListener('DOMContentLoaded', function() {
            // Initialize user storage - IMPORTANT: Must be called before any localStorage operations
            initializeUserStorage();
            
            // Set minimum date for expiry date picker
            const today = new Date().toISOString().split('T')[0];
            document.getElementById('expiryDate').min = today;

            // Mobile menu handling
            document.getElementById('menuToggle').addEventListener('click', toggleMenu);
            
            // Debug user storage key
            console.log('UserID on page load:', '<%= user._id %>');
            console.log('User storage key on page load:', userStorageKey);
        });

        let userStorageKey = '';

        function initializeUserStorage() {
            // Create a unique key based on user ID
            const userId = '<%= user._id %>' || 'default-user';
            
            // Set up both the user-specific storage and the universal storage
            userStorageKey = `userDonations_${userId}`;
            const universalStorageKey = 'allFoodDonations';
            
            // Initialize storage if it doesn't exist
            if (!localStorage.getItem(userStorageKey)) {
                localStorage.setItem(userStorageKey, JSON.stringify([]));
            }
            
            // Initialize universal storage if it doesn't exist
            if (!localStorage.getItem(universalStorageKey)) {
                localStorage.setItem(universalStorageKey, JSON.stringify([]));
            }
            
            console.log(`Post food page: User storage initialized with key: ${userStorageKey}`);
            console.log(`Post food page: Universal storage initialized with key: ${universalStorageKey}`);
        }

        function toggleMenu() {
            const sidebar = document.getElementById('sidebar');
            
            sidebar.classList.toggle('-translate-x-full');
            menuToggle.innerHTML = sidebar.classList.contains('-translate-x-full') 
                ? '<i class="fas fa-bars"></i>' 
                : '<i class="fas fa-times"></i>';
        }

        (function(){if(!window.chatbase||window.chatbase("getState")!=="initialized"){window.chatbase=(...arguments)=>{if(!window.chatbase.q){window.chatbase.q=[]}window.chatbase.q.push(arguments)};window.chatbase=new Proxy(window.chatbase,{get(target,prop){if(prop==="q"){return target.q}return(...args)=>target(prop,...args)}})}const onLoad=function(){const script=document.createElement("script");script.src="https://www.chatbase.co/embed.min.js";script.id="XdbxzB02-VrgllGOSsnGa";script.domain="www.chatbase.co";document.body.appendChild(script)};if(document.readyState==="complete"){onLoad()}else{window.addEventListener("load",onLoad)}})();
    </script>
</body>
</html>
